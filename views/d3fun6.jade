extend layout

block content

	.page-header
		h1 d3.js Fundamentals 
			small working with data
	
	.row(style='background:none; text-align:center;')
		h2 Drawing Maps
		.col-lg-9#chart1
			p. 
				For coloring the graph, get <a href="http://www.colorbrewer2.org">here</a>.
				Map is from <a href="http://www.census.gov/geo/maps-data/data/tiger-cart-boundary.html">here</a>,
				and then convert it to GeoJSON <a href="http://converter.mygeodata.eu/vector"> here </a>.
			script.
				var w = 500;
				var h = 300;

				var color = d3.scale.linear()
												.range(['rgb(161,217,155)','rgb(116,196,118)','rgb(65,171,93)','rgb(35,139,69)','rgb(0,109,44)','rgb(0,68,27)']);

				var projection = d3.geo.albersUsa()
													.translate([w/2,h/2])
													.scale([500]);
				var path = d3.geo.path().projection(projection);

				var svg = d3.select('#chart1').append('svg')
									.attr({
										width: w,
										height: h});
				d3.csv('/data/state_pop.csv', function(data){
					color.domain([
							0,d3.max(data,function(d){ return d.POPESTIMATE2014; })
						])
						console.log(d3.max(data,function(d){ return d.POPESTIMATE2014; }));

					d3.json('/data/us.json', function(json){
						for (var i = 0; i < data.length; i++)
						{
							var stateName = data[i].NAME;
							var statePop = data[i].POPESTIMATE2014;
							for (var j=0; j<json.features.length;j++)
							{
								var usState = json.features[j].properties.NAME;
								if (stateName == usState){
									json.features[j].properties.value = statePop;
									console.log(color(statePop));
									break;
								}
							}
						}
						svg.selectAll('path')
							.data(json.features)
							.enter()
							.append('path')
							.attr('d',path)
							.style('fill', function(d){
								var value = d.properties.value;
								if (value) 
								{
									return color(value);
								}
								else 
									return 'black';
							});
					});
				});

